

/***PRODUTOS COM ALTO ESTOQUE EXCEL ***/
CREATE VIEW ALTO_ESTOQUE_E 
AS 
select PROD.ID,
       PROD.NOME AS  "PRODUTO",
       CATEG.NOME AS "CATEGORIA",
       PROD.QTDE_MIN AS "QTDE_MIN",
       PROD.QTDE_MAX AS "QTDE_MIN",
       PROD.PRECO_CUSTO,
       PROD.PRECO_VENDA,
       PROD.SALDO AS "QTDE ESTOQUE"
from PRODUTOS PROD 
INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
WHERE QTDE_MAX < SALDO



/***PRODUTOS COM BAIXO ESTOQUE EXCEL ***/
CREATE VIEW BAIXO_ESTOQUE_E 
AS 
select PROD.ID,
       PROD.NOME AS  "PRODUTO_ID",
       CATEG.NOME AS  "CATEGORIA_ID",
       PROD.PRECO_CUSTO,
       PROD.PRECO_VENDA,
       PROD.QTDE_MIN,
       PROD.QTDE_MAX,
       PROD.SALDO
from PRODUTOS PROD 
INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
WHERE QTDE_MIN >= SALDO;


-- Unidade que mais vendeu  (Geral)(Tres) - (Ultimos 7 dias) - EXCEL
CREATE VIEW VENDA_UNIDADE_E
AS 
SELECT       SAIDA.DATA_TRANSACAO, 
             UN.NOME    "UNIDADE",
             PROD.NOME  "PRODUTO",
             CATEG.NOME "CATEGORIA", 
             PROD.PRECO_CUSTO, 
             SAIDA.PRECO_VENDA,
             SAIDA.QTDE_PRODUTOS,
             SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA) AS "VL_VENDA"
        FROM ITENS_SAIDA SAIDA 
    INNER JOIN PRODUTOS PROD ON SAIDA.PRODUTOS_ID = PROD.ID
    INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
    INNER JOIN FUNCIONARIOS  FUNC ON SAIDA.FUNCIONARIOS_ID = FUNC.ID
    INNER JOIN UNIDADES     UN     ON FUNC.UNIDADES_ID = UN.ID
where SAIDA.id  in ( case when 
(select {fn TIMESTAMPDIFF(SQL_TSI_DAY, data_transacao, current_date)}
 from ITENS_SAIDA where id = SAIDA.id  ) <=7 then SAIDA.id  else 0 end )
GROUP BY SAIDA.DATA_TRANSACAO,SAIDA.id,   UN.NOME ,  PROD.NOME, CATEG.NOME,PROD.PRECO_CUSTO, SAIDA.PRECO_VENDA,SAIDA.QTDE_PRODUTOS
ORDER BY SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA) DESC



-- Produtos Mais Vendidos (Geral) - (Ultimos 7 dias) - EXCEL
CREATE VIEW MAIS_VENDIDOS_E

AS 
select SUM(SAIDA.QTDE_PRODUTOS) AS "QTD_VENDA",
           SAIDA.PRODUTOS_ID AS "PRODUTO ID",
           PROD.NOME    AS "PRODUTO", 
           CATEG.NOME   AS "CATEGORIA",
           SAIDA.DATA_TRANSACAO
from ITENS_SAIDA SAIDA
INNER JOIN PRODUTOS PROD ON SAIDA.PRODUTOS_ID = PROD.ID
INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
INNER JOIN FUNCIONARIOS  FUNC ON SAIDA.FUNCIONARIOS_ID = FUNC.ID
INNER JOIN UNIDADES     UN     ON FUNC.UNIDADES_ID = UN.ID
where SAIDA.id in ( case when 
(select {fn TIMESTAMPDIFF(SQL_TSI_DAY, data_transacao, current_date)}
from ITENS_SAIDA where id = SAIDA.id  ) <=7 then SAIDA.id else 0 end )
GROUP BY SAIDA.PRODUTOS_ID,PROD.NOME,CATEG.NOME,SAIDA.DATA_TRANSACAO 
ORDER BY SUM(SAIDA.QTDE_PRODUTOS) DESC;


-- FATURAMENTO DA SEMANA (Geral) - (Ultimos 7 dias) - EXCEL
CREATE VIEW FATURAMENTO_SEMANA
AS
select data_transacao,
       PROD.ID,
       PROD.NOME AS "PRODUTO",
       CATEG.NOME AS "CATEGORIA", 
       UN.NOME  AS "UNIDADE",   
       SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA) AS "FATURAMENTO_SEMANA" 
from ITENS_SAIDA SAIDA 
INNER JOIN PRODUTOS PROD ON SAIDA.PRODUTOS_ID = PROD.ID
INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
INNER JOIN FUNCIONARIOS  FUNC ON SAIDA.FUNCIONARIOS_ID = FUNC.ID
INNER JOIN UNIDADES     UN     ON FUNC.UNIDADES_ID = UN.ID
where SAIDA.id in ( case when 
(select {fn TIMESTAMPDIFF(SQL_TSI_DAY, data_transacao, current_date)}
from ITENS_SAIDA where id = SAIDA.id  ) <=7 then SAIDA.id else 0 end )
GROUP BY data_transacao,  PROD.ID,    PROD.NOME, CATEG.NOME, UN.NOME



/* Funcionario que mais vendeu - (Sua Unidade) (Ultimos 7 dias)*/
CREATE VIEW FUNCIONARIO_MAIS_VENDEU_E

AS 
SELECT     SAIDA.data_transacao,
           FUNC.ID      AS      "FUNCIONARIO_ID",     
           FUNC.NOME      AS      "NOME",     
           UN.NOME        AS         "UNIDADE_ID",
           SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA) AS "VENDA"
        FROM ITENS_SAIDA SAIDA 
    INNER JOIN PRODUTOS PROD ON SAIDA.PRODUTOS_ID = PROD.ID
    INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
    INNER JOIN FUNCIONARIOS  FUNC ON SAIDA.FUNCIONARIOS_ID = FUNC.ID
    INNER JOIN UNIDADES     UN     ON FUNC.UNIDADES_ID = UN.ID
    where SAIDA.id in ( case when 
    (select {fn TIMESTAMPDIFF(SQL_TSI_DAY, data_transacao, current_date)}
    from ITENS_SAIDA where id = SAIDA.id  ) <=7 then SAIDA.id else 0 end )
    GROUP BY SAIDA.data_transacao,FUNC.ID,FUNC.NOME,UN.ID , UN.NOME 
    ORDER BY SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA) DESC
