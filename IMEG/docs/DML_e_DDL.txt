
--*********************************************************************************************************************--
--%%%%%%%%%%%%%%%%%%%%%%%%%%     Para configuração inicial, execute os comandos abaixo!      %%%%%%%%%%%%%%%%%%%%%%%%%%--
--*********************************************************************************************************************--


--#####################################################################################
--APAGA AS TABELAS
--#####################################################################################
DROP TABLE PEDIDOS_ENTRADA;
DROP TABLE PEDIDOS_SAIDA;
DROP TABLE HISTORICO_ENTRADA;
DROP TABLE HISTORICO_SAIDA;
DROP TABLE PRODUTOS;
DROP TABLE CATEGORIAS;
DROP TABLE FUNCIONARIOS;
DROP TABLE CARGOS;
DROP TABLE UNIDADES;
DROP TABLE ESTADOS;

--#####################################################################################
--CRIA AS TABELAS
--#####################################################################################
CREATE TABLE CATEGORIAS(
ID INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
NOME VARCHAR (50) NOT NULL,
STATUS BOOLEAN NOT NULL DEFAULT TRUE
);
CREATE TABLE CARGOS(
ID INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
NOME VARCHAR (50) NOT NULL,
STATUS BOOLEAN NOT NULL DEFAULT TRUE
);
CREATE TABLE ESTADOS(
ID INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
NOME VARCHAR (50) NOT NULL
);
CREATE TABLE UNIDADES(
ID INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
ESTADOS_ID INT NOT NULL,
NOME VARCHAR (50) NOT NULL
);
CREATE TABLE PRODUTOS(
ID INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
CATEGORIAS_ID INT NOT NULL,
NOME VARCHAR (50) NOT NULL,
PRECO_CUSTO DECIMAL (9, 2) NOT NULL,
PRECO_VENDA DECIMAL (9, 2) NOT NULL,
QTDE_MIN INT NOT NULL,
QTDE_MAX INT NOT NULL,
SALDO INT NOT NULL,
STATUS BOOLEAN NOT NULL DEFAULT TRUE
);
CREATE TABLE FUNCIONARIOS(
ID INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
CARGOS_ID INT NOT NULL, 
UNIDADES_ID INT NOT NULL,    
NOME VARCHAR (50) NOT NULL
);
CREATE TABLE HISTORICO_ENTRADA(
ID INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
PRODUTOS_ID INT NOT NULL, 
FUNCIONARIOS_ID INT NOT NULL,
DATA_TRANSACAO DATE NOT NULL,    
QTDE_PRODUTOS INT NOT NULL
);
CREATE TABLE HISTORICO_SAIDA(
ID INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
PRODUTOS_ID INT NOT NULL, 
FUNCIONARIOS_ID INT NOT NULL,
DATA_TRANSACAO DATE NOT NULL,    
QTDE_PRODUTOS INT NOT NULL
);
CREATE TABLE PEDIDOS_ENTRADA(
ID INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
PRODUTOS_ID INT NOT NULL, 
FUNCIONARIOS_ID INT NOT NULL
);
CREATE TABLE PEDIDOS_SAIDA(
ID INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
PRODUTOS_ID INT NOT NULL, 
FUNCIONARIOS_ID INT NOT NULL
);

--#####################################################################################
-- POPULA AS TABELAS
--#####################################################################################

--POPULA PEDIDOS_ENTRADA
INSERT INTO  PEDIDOS_ENTRADA(PRODUTOS_ID, FUNCIONARIOS_ID)
VALUES(1, 1);
INSERT INTO  PEDIDOS_ENTRADA(PRODUTOS_ID, FUNCIONARIOS_ID)
VALUES(2, 2);
INSERT INTO  PEDIDOS_ENTRADA(PRODUTOS_ID, FUNCIONARIOS_ID)
VALUES(3, 3);
INSERT INTO  PEDIDOS_ENTRADA(PRODUTOS_ID, FUNCIONARIOS_ID)
VALUES(4, 4);

--POPULA PEDIDOS_SAIDA
INSERT INTO  PEDIDOS_SAIDA(PRODUTOS_ID, FUNCIONARIOS_ID)
VALUES(1, 1);
INSERT INTO  PEDIDOS_SAIDA(PRODUTOS_ID, FUNCIONARIOS_ID)
VALUES(2, 2);
INSERT INTO  PEDIDOS_SAIDA(PRODUTOS_ID, FUNCIONARIOS_ID)
VALUES(3, 3);
INSERT INTO  PEDIDOS_SAIDA(PRODUTOS_ID, FUNCIONARIOS_ID)
VALUES(4, 4);

--POPULA HISTORICO_SAIDA
INSERT INTO  HISTORICO_SAIDA(PRODUTOS_ID, FUNCIONARIOS_ID, DATA_TRANSACAO, QTDE_PRODUTOS)
VALUES(1, 1, '2016-05-01', 100);
INSERT INTO  HISTORICO_SAIDA(PRODUTOS_ID, FUNCIONARIOS_ID, DATA_TRANSACAO, QTDE_PRODUTOS)
VALUES(2, 2, '2016-05-05', 100);
INSERT INTO  HISTORICO_SAIDA(PRODUTOS_ID, FUNCIONARIOS_ID, DATA_TRANSACAO, QTDE_PRODUTOS)
VALUES(3, 3, '2016-05-06', 100);
INSERT INTO  HISTORICO_SAIDA(PRODUTOS_ID, FUNCIONARIOS_ID, DATA_TRANSACAO, QTDE_PRODUTOS)
VALUES(4, 4, '2016-05-09', 100);

--POPULA HISTORICO_ENTRADA
INSERT INTO  HISTORICO_ENTRADA(PRODUTOS_ID, FUNCIONARIOS_ID, DATA_TRANSACAO, QTDE_PRODUTOS)
VALUES(1, 1, '2016-05-01', 100);
INSERT INTO  HISTORICO_ENTRADA(PRODUTOS_ID, FUNCIONARIOS_ID, DATA_TRANSACAO, QTDE_PRODUTOS)
VALUES(2, 2, '2016-05-05', 100);
INSERT INTO  HISTORICO_ENTRADA(PRODUTOS_ID, FUNCIONARIOS_ID, DATA_TRANSACAO, QTDE_PRODUTOS)
VALUES(3, 3, '2016-05-06', 100);
INSERT INTO  HISTORICO_ENTRADA(PRODUTOS_ID, FUNCIONARIOS_ID, DATA_TRANSACAO, QTDE_PRODUTOS)
VALUES(4, 4, '2016-05-09', 100);

--POPULA PRODUTOS
INSERT INTO  PRODUTOS(CATEGORIAS_ID, NOME, PRECO_CUSTO, PRECO_VENDA, QTDE_MIN, QTDE_MAX, SALDO)
VALUES(1, 'DOVE MAN 400ML', 5.99, 10.99, 50, 1000, 100);
INSERT INTO  PRODUTOS(CATEGORIAS_ID, NOME, PRECO_CUSTO, PRECO_VENDA, QTDE_MIN, QTDE_MAX, SALDO)
VALUES(2, 'PALMOLIVE 300ML', 6.99, 11.99, 50, 1000, 200);
INSERT INTO  PRODUTOS(CATEGORIAS_ID, NOME, PRECO_CUSTO, PRECO_VENDA, QTDE_MIN, QTDE_MAX, SALDO)
VALUES(3, 'PANTENE 200ML', 7.99, 12.99, 50, 1000, 300);
INSERT INTO  PRODUTOS(CATEGORIAS_ID, NOME, PRECO_CUSTO, PRECO_VENDA, QTDE_MIN, QTDE_MAX, SALDO)
VALUES(4, 'OX WOMAN 100ML', 8.99, 13.99, 50, 1000, 400);

--POPULA CATEGORIAS
INSERT INTO  CATEGORIAS(NOME)
VALUES('SHAMPOO');
INSERT INTO  CATEGORIAS(NOME)
VALUES('CONDICIONADOR');
INSERT INTO  CATEGORIAS(NOME)
VALUES('SABONETE');
INSERT INTO  CATEGORIAS(NOME)
VALUES('TONALIZANTE');

--POPULA FUNCIONARIOS
INSERT INTO  FUNCIONARIOS(CARGOS_ID, UNIDADES_ID, NOME)
VALUES(1, 1, 'IGOR DE OLIVEIRA SATO');
INSERT INTO  FUNCIONARIOS(CARGOS_ID, UNIDADES_ID, NOME)
VALUES(2, 2, 'MARCIO SOARES');
INSERT INTO  FUNCIONARIOS(CARGOS_ID, UNIDADES_ID, NOME)
VALUES(3, 3, 'EILANE SANTOS');
INSERT INTO  FUNCIONARIOS(CARGOS_ID, UNIDADES_ID, NOME)
VALUES(4, 4, 'DIOGO LAUREANO');
INSERT INTO  FUNCIONARIOS(CARGOS_ID, UNIDADES_ID, NOME)
VALUES(5, 1, 'MATHEUS NÃO LEMBRO O SOBRENOME');

--POPULA CARGOS
INSERT INTO  CARGOS(NOME)
VALUES('GERENTE DE TI');
INSERT INTO  CARGOS(NOME)
VALUES('ANALISTA DE TI');
INSERT INTO  CARGOS(NOME)
VALUES('GERENTE ADMINISTRATIVO');
INSERT INTO  CARGOS(NOME)
VALUES('ANALISTA ADMINISTRATIVO');
INSERT INTO  CARGOS(NOME)
VALUES('GERENTE DE LOJA');
INSERT INTO  CARGOS(NOME)
VALUES('ATENDENTE');

--POPULA UNIDADES
INSERT INTO  UNIDADES(ESTADOS_ID, NOME)
VALUES(1, 'IMEG_GAROA');
INSERT INTO  UNIDADES(ESTADOS_ID, NOME)
VALUES(2, 'IMEG_MARAVILHOSA');
INSERT INTO  UNIDADES(ESTADOS_ID, NOME)
VALUES(3, 'IMEG_BÁ-THÊ');
INSERT INTO  UNIDADES(ESTADOS_ID, NOME)
VALUES(4, 'IMEG_UAI-SÔ');

--POPULA ESTADOS
INSERT INTO  ESTADOS(NOME)
VALUES('SP - São Paulo');
INSERT INTO  ESTADOS(NOME)
VALUES('RJ - Rio de Janeiro');
INSERT INTO  ESTADOS(NOME)
VALUES('RS - Porto Alegre');
INSERT INTO  ESTADOS(NOME)
VALUES('MG - Belo Horizonte');


--#####################################################################################
-- FOREIGN KEYS PRODUTOS
--#####################################################################################
ALTER TABLE PRODUTOS 
   ADD FOREIGN KEY (CATEGORIAS_ID) REFERENCES CATEGORIAS (ID);

ALTER TABLE UNIDADES 
   ADD FOREIGN KEY (ESTADOS_ID) REFERENCES ESTADOS (ID);

ALTER TABLE FUNCIONARIOS 
   ADD FOREIGN KEY (CARGOS_ID) REFERENCES CARGOS (ID);
ALTER TABLE FUNCIONARIOS 
   ADD FOREIGN KEY (UNIDADES_ID) REFERENCES UNIDADES (ID);

ALTER TABLE HISTORICO_ENTRADA 
   ADD FOREIGN KEY (PRODUTOS_ID) REFERENCES PRODUTOS (ID);
ALTER TABLE HISTORICO_ENTRADA 
   ADD FOREIGN KEY (FUNCIONARIOS_ID) REFERENCES FUNCIONARIOS (ID);

ALTER TABLE HISTORICO_SAIDA 
   ADD FOREIGN KEY (PRODUTOS_ID) REFERENCES PRODUTOS (ID);
ALTER TABLE HISTORICO_SAIDA 
   ADD FOREIGN KEY (FUNCIONARIOS_ID) REFERENCES FUNCIONARIOS (ID);

ALTER TABLE PEDIDOS_ENTRADA 
   ADD FOREIGN KEY (PRODUTOS_ID) REFERENCES PRODUTOS (ID);
ALTER TABLE PEDIDOS_ENTRADA 
   ADD FOREIGN KEY (FUNCIONARIOS_ID) REFERENCES FUNCIONARIOS (ID);

ALTER TABLE PEDIDOS_SAIDA 
   ADD FOREIGN KEY (PRODUTOS_ID) REFERENCES PRODUTOS (ID);
ALTER TABLE PEDIDOS_SAIDA 
   ADD FOREIGN KEY (FUNCIONARIOS_ID) REFERENCES FUNCIONARIOS (ID);

