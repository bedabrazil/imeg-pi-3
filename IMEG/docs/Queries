
--#####################################################################################
-- RELATÓRIOS 
--#####################################################################################

/***SELECT PARA AS VIEWS CRIADAS***/
SELECT * FROM BAIXO_ESTOQUE

SELECT * FROM MAIS_VENDIDOS
WHERE UNIDADE = 1 -- INFORMAR O ID DA UNIDADE


 
/*LISTA OS REGISTROS DE ENTRADA DE PRODUTOS NO ESTOQUE*/
   SELECT ENT.DATA_TRANSACAO    "DATA",
           ENT.PRODUTOS_ID       "PRODUTO_ID" ,
           CATEG.ID            "CATEGORIA_ID",    
           ENT.QTDE_PRODUTOS    "QTDE_ENTRADA",
           PROD.SALDO            "ESTOQUE",   
           FUNC.ID             "FUNCIONARIO",
           UN.ID               "UNIDADE"
   FROM ITENS_ENTRADA ENT 
    INNER JOIN PRODUTOS PROD ON ENT.PRODUTOS_ID = PROD.ID
    INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
    INNER JOIN FUNCIONARIOS  FUNC ON ENT.FUNCIONARIOS_ID = FUNC.ID
    INNER JOIN UNIDADES     UN     ON FUNC.UNIDADES_ID = UN.ID
   WHERE 1=1
   --AND UN.ID = -- CONSULTA POR UNIDADE
   --AND  FUNC.ID  = -- CONSULTA POR FUNCIONARIO   

/*LISTA OS REGISTROS DE ENTRADA DE PRODUTOS NO ESTOQUE AGRUPADOS E SEM EXIBIÇÃO DA DATA*/
     SELECT ENT.PRODUTOS_ID       "PRODUTO_ID" ,
           CATEG.ID               "CATEGORIA_ID",    
           SUM(ENT.QTDE_PRODUTOS) "QTDE_ENTRADA",
           PROD.SALDO             "ESTOQUE",   
           FUNC.ID                "FUNCIONARIO_ID",
           UN.ID                  "UNIDADE_ID"
        FROM ITENS_ENTRADA ENT 
    INNER JOIN PRODUTOS PROD ON ENT.PRODUTOS_ID = PROD.ID
    INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
    INNER JOIN FUNCIONARIOS  FUNC ON ENT.FUNCIONARIOS_ID = FUNC.ID
    INNER JOIN UNIDADES     UN     ON FUNC.UNIDADES_ID = UN.ID
    WHERE 1=1
   --AND UN.ID = -- CONSULTA POR UNIDADE
   --AND  FUNC.ID  = -- CONSULTA POR FUNCIONARIO   
    GROUP BY ENT.PRODUTOS_ID, CATEG.ID,  PROD.SALDO ,FUNC.ID,UN.ID 


/*LISTA OS REGISTROS DE SAIDA DE PRODUTOS NO ESTOQUE*/
    SELECT SAIDA.DATA_TRANSACAO    "DATA",
           SAIDA.PRODUTOS_ID       "PRODUTO_ID" ,
           CATEG.ID                "CATEGORIA_ID",    
           SAIDA.QTDE_PRODUTOS     "QTDE_SAIDA",
           FUNC.ID                 "FUNCIONARIO_ID",
           UN.ID                   "UNIDADE_ID"
        FROM ITENS_SAIDA SAIDA 
    INNER JOIN PRODUTOS PROD ON SAIDA.PRODUTOS_ID = PROD.ID
    INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
    INNER JOIN FUNCIONARIOS  FUNC ON SAIDA.FUNCIONARIOS_ID = FUNC.ID
    INNER JOIN UNIDADES     UN     ON FUNC.UNIDADES_ID = UN.ID
    WHERE 1=1
    --AND SAIDA.DATA_TRANSACAO  BETWEEN '2016-05-10' AND '2016-05-15' -- CONSULTA POR DATA DE VENDA
    --AND UN.ID = 1 -- CONSULTA POR UNIDADE
    --AND FUNC.ID = 1 -- CONSULTA POR FUNCIONARIO


/***LISTA OS REGISTROS DE ENTRADA DE PRODUTOS NO ESTOQUE AGRUPADOS E SEM EXIBIÇÃO DA DATA***/
    SELECT SAIDA.PRODUTOS_ID       "PRODUTO_ID" ,
           CATEG.ID                "CATEGORIA_ID",    
           SUM(SAIDA.QTDE_PRODUTOS)"QTDE_SAIDA",
           PROD.SALDO              "ESTOQUE",   
           FUNC.ID                 "FUNCIONARIO",
           UN.ID                   "UNIDADE"
        FROM ITENS_SAIDA SAIDA 
    INNER JOIN PRODUTOS PROD ON SAIDA.PRODUTOS_ID = PROD.ID
    INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
    INNER JOIN FUNCIONARIOS  FUNC ON SAIDA.FUNCIONARIOS_ID = FUNC.ID
    INNER JOIN UNIDADES     UN     ON FUNC.UNIDADES_ID = UN.ID
     WHERE 1=1
    -- AND UN.ID = 1 -- CONSULTA POR UNIDADE
    --AND FUNC.ID = 1 -- CONSULTA POR FUNCIONARIO
    GROUP BY SAIDA.PRODUTOS_ID , CATEG.ID,  PROD.SALDO ,FUNC.ID,UN.ID 


/*VL. DE VENDA POR FUNCIONARIOS*/ 

 SELECT    FUNC.ID,
           FUNC.NOME             "FUNCIONARIO",
           UN.NOME               "UNIDADE",
           SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA)
        FROM ITENS_SAIDA SAIDA 
    INNER JOIN PRODUTOS PROD ON SAIDA.PRODUTOS_ID = PROD.ID
    INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
    INNER JOIN FUNCIONARIOS  FUNC ON SAIDA.FUNCIONARIOS_ID = FUNC.ID
    INNER JOIN UNIDADES     UN     ON FUNC.UNIDADES_ID = UN.ID
    GROUP BY FUNC.ID,FUNC.NOME, UN.NOME 
    ORDER BY SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA) DESC


/*VL. DE VENDA POR FUNCIONARIOS E PERÍODO*/ 

 SELECT    FUNC.ID,
           FUNC.NOME             "FUNCIONARIO",
           UN.NOME               "UNIDADE",
           SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA)
        FROM ITENS_SAIDA SAIDA 
    INNER JOIN PRODUTOS PROD ON SAIDA.PRODUTOS_ID = PROD.ID
    INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
    INNER JOIN FUNCIONARIOS  FUNC ON SAIDA.FUNCIONARIOS_ID = FUNC.ID
    INNER JOIN UNIDADES     UN     ON FUNC.UNIDADES_ID = UN.ID
    WHERE SAIDA.DATA_TRANSACAO BETWEEN '2016-05-09' AND '2016-05-15' /*ALTERAR DATA*/
    GROUP BY FUNC.ID,FUNC.NOME, UN.NOME 
    ORDER BY SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA) DESC


/*VENDA POR UNIDADES*/ 

 SELECT      UN.NOME    "UNIDADE",
             SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA)
        FROM ITENS_SAIDA SAIDA 
    INNER JOIN PRODUTOS PROD ON SAIDA.PRODUTOS_ID = PROD.ID
    INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
    INNER JOIN FUNCIONARIOS  FUNC ON SAIDA.FUNCIONARIOS_ID = FUNC.ID
    INNER JOIN UNIDADES     UN     ON FUNC.UNIDADES_ID = UN.ID
    GROUP BY UN.NOME 
    ORDER BY SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA) DESC


/*VENDA POR UNIDADES E PERÍODO*/

 SELECT      UN.NOME    "UNIDADE",
             SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA)
        FROM ITENS_SAIDA SAIDA 
    INNER JOIN PRODUTOS PROD ON SAIDA.PRODUTOS_ID = PROD.ID
    INNER JOIN CATEGORIAS CATEG ON PROD.CATEGORIAS_ID = CATEG.ID
    INNER JOIN FUNCIONARIOS  FUNC ON SAIDA.FUNCIONARIOS_ID = FUNC.ID
    INNER JOIN UNIDADES     UN     ON FUNC.UNIDADES_ID = UN.ID
    WHERE SAIDA.DATA_TRANSACAO BETWEEN '2016-05-09' AND '2016-05-15' /*ALTERAR DATA*/
    GROUP BY UN.NOME 
    ORDER BY SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA) DESC


/***FATURAMENTO DA SEMANA (Unidade) - (Ultimos 7 dias)***/

select SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA) AS "FATURAMENTO_SEMANA" 
from ITENS_SAIDA SAIDA
where id in ( case when 
(select {fn TIMESTAMPDIFF(SQL_TSI_DAY, data_transacao, current_date)}
from ITENS_SAIDA where id = SAIDA.id  ) <=7 then id else 0 end )
and UNIDADES_ID = ?
OFFSET 0 ROWS FETCH NEXT 3 ROWS ONLY;

/***FUNCIONARIOS QUE MAIS VENDERAM NA UNIDADE***/
SELECT  SAIDA.FUNCIONARIOS_ID AS "FUNCIONARIO",
SUM(QTDE_PRODUTOS*SAIDA.PRECO_VENDA) AS "TOTAL_VENDAS"
FROM ITENS_SAIDA SAIDA
WHERE id in ( case when 
               (select {fn TIMESTAMPDIFF(SQL_TSI_DAY, data_transacao, current_date)}
                   from ITENS_SAIDA where id = SAIDA.id  ) <=7 then id else 0 end ) 
AND SAIDA.UNIDADES_ID = ?
GROUP BY SAIDA.FUNCIONARIOS_ID 
ORDER BY SUM(SAIDA.QTDE_PRODUTOS*SAIDA.PRECO_VENDA) DESC;